(defun main ()
    (load "sudoku.lisp")
    (setq grid (list
        '(5 3 7 9 2 8 1 6 4)
        '(6 4 8 7 5 1 3 9 2)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)
        '(0 0 0 0 0 0 0 0 0)))

    (setq comp_hor (list
        '(#\> #\< #\X #\> #\< #\X #\< #\>)
        '(#\> #\< #\X #\> #\> #\X #\< #\>)
        '(#\< #\< #\X #\> #\> #\X #\> #\<)
        '(#\> #\> #\X #\< #\> #\X #\< #\<)
        '(#\< #\> #\X #\> #\> #\X #\> #\<)
        '(#\< #\> #\X #\< #\< #\X #\< #\>)
        '(#\> #\< #\X #\> #\< #\X #\> #\<)
        '(#\< #\> #\X #\> #\< #\X #\< #\>)
        '(#\< #\> #\X #\< #\> #\X #\> #\>)))
        
    (setq comp_ver (list
        '(#\< #\< #\< #\> #\< #\> #\< #\< #\>)
        '(#\> #\> #\< #\> #\> #\< #\< #\> #\<)
        '(#\X #\X #\X #\X #\X #\X #\X #\X #\X)
        '(#\> #\< #\< #\< #\> #\> #\< #\> #\>)
        '(#\> #\> #\> #\> #\< #\< #\> #\< #\>)
        '(#\X #\X #\X #\X #\X #\X #\X #\X #\X)
        '(#\< #\< #\> #\> #\> #\> #\< #\< #\>)
        '(#\> #\> #\< #\> #\< #\< #\< #\> #\>)))

    (setq test '(-1 4 -1 4))
    (setq pos1
        (make-2d_pos
            :x 0
            :y 0
        ))
    (setq pos
        (make-2d_pos
            :x 1
            :y 1
        ))
    (setq comps
        (make-comps_struct
            :comp_hor comp_hor
            :comp_ver comp_ver
        ))
    (write-line (write-to-string (solveSudoku grid comps)))
)
(main)